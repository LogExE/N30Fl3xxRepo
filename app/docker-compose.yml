version: "3"

services:
  nginx-dev:
    image: nginx
    container_name: scoringsys-nginx
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 80:80
    depends_on:
      - frontend
    restart: always
    profiles:
     - dev
  nginx:
    image: logxx/scoringsys-nginx
    build: ./nginx
    container_name: scoringsys-nginx
    volumes:
      - certbotwww:/var/www/certbot/:ro
      - certbotconf:/etc/nginx/ssl/:ro
    ports:
      - 80:80
      - 443:443
    depends_on:
      - frontend
    restart: always
    profiles:
      - deploy
  frontend:
    image: logxx/scoringsys-front
    build: ./frontend
    container_name: scoringsys-front
    environment:
      - BACKEND_HOST=backend
      - FLET_PORT=50422
      - PYTHONUNBUFFERED=1
    expose:
      - 50422
    depends_on:
      - backend
    restart: always
  backend:
    image: logxx/scoringsys-back
    build: ./backend
    container_name: scoringsys-back
    environment:
      - FRONTEND_HOST=frontend
      - FRONTEND_PORT=50422
      - DATA_HOST=ml
      - DATA_PORT=8888
      - UVICORN_HOST=0.0.0.0
      - UVICORN_PORT=8000
      - UVICORN_ROOT_PATH=/api
    expose:
      - 8000
    restart: always
  ml:
    image: logxx/scoringsys-ml
    build: ./ml
    container_name: scoringsys-ml
    environment:
    - UVICORN_HOST=0.0.0.0
    - UVICORN_PORT=8888
    expose:
      - 8888
    restart: always
  duckdns:
    image: lscr.io/linuxserver/duckdns
    container_name: scoringsys-duckdns
    environment:
      - SUBDOMAINS=scoringsys
      - TOKEN=${DUCKDNS_TOKEN}
    restart: always
    profiles:
      - deploy
  certbot:
    image: certbot/certbot
    container_name: scoringsys-certbot
    volumes:
      - certbotwww:/var/www/certbot:rw
      - certbotconf:/etc/letsencrypt/:rw
    profiles:
      - deploy
volumes:
  certbotwww:
  certbotconf: